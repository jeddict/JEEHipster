<%#
 Copyright 2013-2017 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://jhipster.github.io/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 
 Portions Copyright 2013-2018 Gaurav Gupta
-%>
#
# Application template.
#
# This defines all the configurable parameters and other objects that are needed to run the application service.
# This template can even be saved in OpenShift namespace as well so that have the flexibility to do any project specific customizations.
# Pls note wherever displayName says *** PLEASE DO NOT CHANGE THIS ***, don't touch that as those parameters will be
# referenced in other places.
#
apiVersion: v1
kind: Template
metadata:
  name: <%= baseName.toLowerCase() %>-app-template
  namespace: <%= openshiftNamespace %>
  annotations:
    description: This template defines objects that are required to spin up an <%= baseName.toLowerCase() %> service pod
    tags: <%= baseName.toLowerCase() %>, service
    openshift.io/display-name: <%= baseName.toLowerCase() %>-template
    openshift.io/long-description: This template provides objects that are required to spin up a <%= baseName.toLowerCase() %> service pod.
    openshift.io/provider-display-name: <%= baseName %>
labels:
  app: <%= baseName.toLowerCase() %>-app
  createdBy: <%= createdBy %>
parameters:
  -
    name: APPLICATION_NAME
    value: <%= baseName.toLowerCase() %>
    description: Name of the application
    required: true
    displayName: Application Name
  -
    name: SECRET_REF
    value: ds-secret-ref
    description: Name of the DataSource Secret Reference
    required: true
    displayName: "*** PLEASE DO NOT CHANGE THIS ***"
  -
    name: REG_SECRET_REF
    value: reg-secret-ref
    description: Name of the Registry Secret Reference
    required: true
    displayName: "*** PLEASE DO NOT CHANGE THIS ***"
  -
    name: APP_PORT
    value: "<%= serverPort %>"
    description: Port of the application
    required: true
    displayName: Application Port
objects:
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
          pre:
            failurePolicy: ignore
            execNewPod:
              command:
                - "/bin/sh"
                - "-c"
                - |
                    while true
                    do
                    <%_ if (prodDatabaseType === 'mysql') { _%>
                      rt=$(nc -z -w 1 ${APPLICATION_NAME}-mysqldb 80)
                    <%_ } _%>
                    <%_ if (prodDatabaseType === 'mariadb') { _%>
                      rt=$(nc -z -w 1 ${APPLICATION_NAME}-mariadb 80)
                    <%_ } _%>
                    <%_ if (prodDatabaseType === 'postgresql') { _%>
                      rt=$(nc -z -w 1 ${APPLICATION_NAME}-postgresqldb 80)
                    <%_ } _%>
                      if [ $? -eq 0 ]; then
                        echo "DB is UP"
                        break
                      fi
                      echo "DB is not yet reachable;sleep for 10s before retry"
                      sleep 10
                    done
              containerName: ${APPLICATION_NAME}
        resources:
      replicas: "1"
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
        spec:
          containers:
          - name: ${APPLICATION_NAME}
            image: <%= targetImageName %>
            imagePullPolicy: IfNotPresent
            <%_ if (prodDatabaseType === 'mysql') { _%>
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://${APPLICATION_NAME}-mysqldb/<%= baseName.toLowerCase() %>?useUnicode=true&characterEncoding=utf8&useSSL=false
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-password
            <%_ } _%>
            <%_ if (prodDatabaseType === 'mariadb') { _%>
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mariadb://${APPLICATION_NAME}-mariadb/<%= baseName.toLowerCase() %>?useUnicode=true&characterEncoding=utf8&useSSL=false
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-password
            <%_ } _%>
            <%_ if (prodDatabaseType === 'postgresql') { _%>
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://${APPLICATION_NAME}-postgresqldb/${APPLICATION_NAME}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-password
            <%_ } _%>
            ports:
            - name: http
              containerPort: "${APP_PORT}"
  -
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{
          "name": <%_ if (prodDatabaseType === 'mysql') { _%>"${APPLICATION_NAME}-mysqldb"<%_ } _%>
          <%_ if (prodDatabaseType === 'mariadb') { _%>"${APPLICATION_NAME}-mariadb"<%_ } _%>
          <%_ if (prodDatabaseType === 'postgresql') { _%>"${APPLICATION_NAME}-postgresqldb"<%_ } _%>, "namespace": "", "kind": "Service"}]'
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      selector:
        app: ${APPLICATION_NAME}
      type: LoadBalancer
      ports:
      - name: http
        port: "${APP_PORT}"
  -
    apiVersion: v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: "100"
      port:
        targetPort: "http"
      wildcardPolicy: None